import React, { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import axios from "axios";

const AIWorkflowForm = () => {
  const [formData, setFormData] = useState({
    businessType: "",
    workflowIdea: "",
    workflowType: "",
    keyObjective: "",
    challenges: "",
    desiredFeatures: "",
    existingTools: "",
    integrations: "",
    dataSources: "",
  });
  const [suggestion, setSuggestion] = useState("");

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const response = await axios.post("http://localhost:5000/predict", formData);
      setSuggestion(response.data.suggestion);
    } catch (error) {
      console.error("Error fetching prediction", error);
    }
  };

  return (
    <div className="p-6 max-w-2xl mx-auto">
      <Card>
        <CardContent className="p-4 space-y-4">
          <h2 className="text-xl font-bold">AI Workflow Automation Generator</h2>
          <form onSubmit={handleSubmit} className="space-y-3">
            {Object.keys(formData).map((key) => (
              <input
                key={key}
                type="text"
                name={key}
                placeholder={key.replace(/([A-Z])/g, ' $1').trim()}
                value={formData[key]}
                onChange={handleChange}
                className="w-full p-2 border rounded"
              />
            ))}
            <Button type="submit">Generate Workflow</Button>
          </form>
          {suggestion && (
            <div className="mt-4 p-4 bg-gray-100 rounded">
              <h3 className="font-semibold">Suggested Workflow:</h3>
              <p>{suggestion}</p>
            </div>
          )}
        </CardContent>
      </Card>
    </div>
  );
};

export default AIWorkflowForm;
